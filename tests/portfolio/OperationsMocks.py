from datetime import datetime
from decimal import Decimal
from unittest.mock import Mock

operations = [
    Mock(
        operation_type='Buy',
        payment=Decimal('-100'),
        currency='RUB'
    ),
    Mock(
        operation_type='Buy',
        payment=Decimal('-100'),
        currency='USD'
    ),
    Mock(
        operation_type='BuyCard',
        payment=Decimal('-1'),
        currency='USD'
    ),
    Mock(
        operation_type='Sell',
        payment=Decimal('100'),
        currency='USD'
    ),
    Mock(
        operation_type='Sell',
        payment=Decimal('10'),
        currency='RUB'
    ),
    Mock(
        operation_type='BrokerCommission',
        payment=Decimal('-1.25'),
        currency='USD'
    ),
    Mock(
        operation_type='BrokerCommission',
        payment=Decimal('-0.25'),
        currency='RUB'
    ),
    Mock(
        operation_type='ExchangeCommission',
        payment=Decimal('-0.25'),
        currency='USD'
    ),
    Mock(
        operation_type='ExchangeCommission',
        payment=Decimal('-2.25'),
        currency='RUB'
    ),
    Mock(
        operation_type='ServiceCommission',
        payment=Decimal('-0.01'),
        currency='RUB'
    ),
    Mock(
        operation_type='ServiceCommission',
        payment=Decimal('-0.41'),
        currency='USD'
    ),
    Mock(
        operation_type='MarginCommission',
        payment=Decimal('-0.31'),
        currency='RUB'
    ),
    Mock(
        operation_type='MarginCommission',
        payment=Decimal('-0.21'),
        currency='USD'
    ),
    Mock(
        operation_type='OtherCommission',
        payment=Decimal('-0.11'),
        currency='USD'
    ),
    Mock(
        operation_type='OtherCommission',
        payment=Decimal('-2.41'),
        currency='RUB'
    ),
    Mock(
        operation_type='PayIn',
        payment=Decimal('10'),
        currency='USD'
    ),
    Mock(
        operation_type='PayIn',
        payment=Decimal('100'),
        currency='RUB'
    ),
    Mock(
        operation_type='PayOut',
        payment=Decimal('-100'),
        currency='RUB'
    ),
    Mock(
        operation_type='PayOut',
        payment=Decimal('-5'),
        currency='USD'
    ),
    Mock(
        operation_type='Tax',
        payment=Decimal('-5'),
        currency='USD'
    ),
    Mock(
        operation_type='Tax',
        payment=Decimal('-2'),
        currency='RUB'
    ),
    Mock(
        operation_type='TaxLucre',
        payment=Decimal('-12.2'),
        currency='RUB'
    ),
    Mock(
        operation_type='TaxLucre',
        payment=Decimal('-0.2'),
        currency='USD'
    ),
    Mock(
        operation_type='TaxDividend',
        payment=Decimal('-22.3'),
        currency='RUB'
    ),
    Mock(
        operation_type='TaxDividend',
        payment=Decimal('-3'),
        currency='USD'
    ),
    Mock(
        operation_type='TaxCoupon',
        payment=Decimal('-0.3'),
        currency='USD'
    ),
    Mock(
        operation_type='TaxCoupon',
        payment=Decimal('-2.3'),
        currency='RUB'
    ),
    Mock(
        operation_type='TaxBack',
        payment=Decimal('-26.3'),
        currency='RUB'
    ),
    Mock(
        operation_type='TaxBack',
        payment=Decimal('-6'),
        currency='USD'
    ),
    Mock(
        operation_type='Repayment'
    ),
    Mock(
        operation_type='PartRepayment'
    ),
    Mock(
        operation_type='Coupon',
        payment=Decimal('10'),
        currency='RUB'
    ),
    Mock(
        operation_type='Coupon',
        payment=Decimal('25'),
        currency='USD'
    ),
    Mock(
        operation_type='Dividend',
        payment=Decimal('25'),
        currency='USD'
    ),
    Mock(
        operation_type='Dividend',
        payment=Decimal('2'),
        currency='RUB'
    ),
    Mock(
        operation_type='SecurityIn'
    ),
    Mock(
        operation_type='SecurityOut'
    )
]
